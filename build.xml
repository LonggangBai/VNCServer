<project name="JCope VNC Server" default="compile" basedir=".">
  <description>JCope VNCServer build file</description>
  <!-- set global properties for this build -->
  <macrodef name="deleteifexists">
    <attribute name="file" />
    <sequential>
      <delete file="@{file}" failonerror="false" />
      <fail message="File exists: @{file}">
        <condition>
          <resourcecount count="1">
            <fileset file="@{file}"/>
          </resourcecount>
        </condition>
      </fail>
    </sequential>
  </macrodef>
  <macrodef name="compilesrc">
    <attribute name="name" />
    <attribute name="excludes" default="" />
    <attribute name="classpath" default="" />
    <sequential>
      <record name="${logdir}/@{name}.txt" action="start" append="false" />
      
	  <!-- remove the not_built_marker marker -->
	  <deleteifexists file="${not_built_marker}" />
	  
      <!-- Compile the java code from ${src} into ${build} -->
	  <!-- TODO: move com/jcope/util/Hashify.java to another git repository/library -->
      <javac target="1.6" srcdir="${src}" destdir="${build}" excludes="com/jcope/util/Hashify.java,@{excludes}" classpath="@{classpath}" >
        <compilerarg value="-Xlint:unchecked"/>
      </javac>
  	  <record name="${logdir}/@{name}.txt" action="stop"/>
    </sequential>
  </macrodef>
  <property name="logdir" location="build.log"/>
  <property name="src" location="src"/>
  <property name="build" location="bin"/>
  <property name="dist"  location="dist"/>
  <property name="not_built_marker"  location="${build}/empty"/>

  <target name="initlog" >
    <mkdir dir="${logdir}"/>
  </target>
  
  <target name="init" depends="initlog">
  	<record name="${logdir}/init.txt" action="start" append="false" />
    <!-- Create the time stamp -->
    <tstamp/>
    <!-- Create the build directory structure used by compile -->
    <mkdir dir="${build}"/>
    <record name="${logdir}/init.txt" action="stop" />
  </target>

  <target name="compile" depends="init"
        description="compile the source " >
  	<compilesrc name="compile" excludes="com/jcope/vnc/client/NativeDecorator.java" />
  </target>

  <target name="ncompile" depends="init"
        description="compile the source with native support " >
    
    <!-- Compile the software with
         support for natively taking over
         keystrokes/overriding global handles
         using:
         https://code.google.com/p/jnativehook/
         Last known compatible version: 1.1.4
         Drop JNativeHook.jar into "lib" dir -->
    
  	<compilesrc name="ncompile" classpath="lib/JNativeHook.jar" />
  </target>

  <target name="dist" depends="compile"
        description="generate the distribution" >
  	<record name="${logdir}/dist.txt" action="start" append="false" />
	
	<!-- Create the distribution directory -->
    <mkdir dir="${dist}/lib"/>

    <!-- Put everything in ${build} into the MyProject-${DSTAMP}.jar file -->
    <jar jarfile="${dist}/lib/MyProject-${DSTAMP}.jar" basedir="${build}"/>
  	<record name="${logdir}/dist.txt" action="stop"/>
  </target>

  <target name="clean"
        description="clean up" depends="initlog" >
  	<record name="${logdir}/clean.txt" action="start" append="false" />
    <!-- Delete the ${build} and ${dist} directory trees -->
    <delete dir="${build}"/>
    <delete dir="${dist}"/>
  	<record name="${logdir}/clean.txt" action="stop"/>
  </target>
  
  <target name="cleangit"
        description="clean up" depends="clean" >
	
  	<!-- Delete the ${logdir} directory trees -->
    <delete dir="${logdir}"/>
	
	<!-- Create ${build} directory -->
	<mkdir dir="${build}"/>
	<touch file="${not_built_marker}"/>
	
	<!-- Delete files often created in normal run/log operations -->
	<deleteifexists file="setup.log" />
	<deleteifexists file="client.log" />
	<deleteifexists file="server.log" />
	<deleteifexists file="server.lock" />
	<deleteifexists file="server.pid" />
  </target>
</project>